<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaobowd.mysite.mapper.AlipayTransactionRecordVOMapper">
    <resultMap id="BaseResultMap" type="com.xiaobowd.mysite.bean.AlipayTransactionRecordVO">
        <id column="transaction_id" jdbcType="VARCHAR" property="transactionId"/>
        <result column="business_id" jdbcType="VARCHAR" property="businessId"/>
        <result column="transaction_create_date" jdbcType="TIMESTAMP" property="transactionCreateDate"/>
        <result column="payed_date" jdbcType="TIMESTAMP" property="payedDate"/>
        <result column="last_update_date" jdbcType="TIMESTAMP" property="lastUpdateDate"/>
        <result column="transaction_source" jdbcType="VARCHAR" property="transactionSource"/>
        <result column="transaction_type" jdbcType="VARCHAR" property="transactionType"/>
        <result column="transaction_target" jdbcType="VARCHAR" property="transactionTarget"/>
        <result column="good_name" jdbcType="VARCHAR" property="goodName"/>
        <result column="amount" jdbcType="DOUBLE" property="amount"/>
        <result column="transaction_direction" jdbcType="INTEGER" property="transactionDirection"/>
        <result column="transaction_status" jdbcType="VARCHAR" property="transactionStatus"/>
        <result column="service_fee" jdbcType="DOUBLE" property="serviceFee"/>
        <result column="successful_refund" jdbcType="DOUBLE" property="successfulRefund"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="fund_status" jdbcType="INTEGER" property="fundStatus"/>
    </resultMap>
    <sql id="Base_Column_List">
        transaction_id, business_id, transaction_create_date, payed_date, last_update_date,
        transaction_source, transaction_type, transaction_target, good_name, amount, transaction_direction,
        transaction_status, service_fee, successful_refund, remark, fund_status
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from T_ALIPAY_TRANSACTION_RECORDS
        where transaction_id = #{transactionId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from T_ALIPAY_TRANSACTION_RECORDS
        where transaction_id = #{transactionId,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.xiaobowd.mysite.bean.AlipayTransactionRecordVO">
        insert into T_ALIPAY_TRANSACTION_RECORDS (transaction_id, business_id, transaction_create_date,
        payed_date, last_update_date, transaction_source,
        transaction_type, transaction_target, good_name,
        amount, transaction_direction, transaction_status,
        service_fee, successful_refund, remark,
        fund_status)
        values (#{transactionId,jdbcType=VARCHAR}, #{businessId,jdbcType=VARCHAR},
        #{transactionCreateDate,jdbcType=TIMESTAMP},
        #{payedDate,jdbcType=TIMESTAMP}, #{lastUpdateDate,jdbcType=TIMESTAMP}, #{transactionSource,jdbcType=VARCHAR},
        #{transactionType,jdbcType=VARCHAR}, #{transactionTarget,jdbcType=VARCHAR}, #{goodName,jdbcType=VARCHAR},
        #{amount,jdbcType=DOUBLE}, #{transactionDirection,jdbcType=INTEGER}, #{transactionStatus,jdbcType=VARCHAR},
        #{serviceFee,jdbcType=DOUBLE}, #{successfulRefund,jdbcType=DOUBLE}, #{remark,jdbcType=VARCHAR},
        #{fundStatus,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.xiaobowd.mysite.bean.AlipayTransactionRecordVO">
        insert into T_ALIPAY_TRANSACTION_RECORDS
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="transactionId != null">
                transaction_id,
            </if>
            <if test="businessId != null">
                business_id,
            </if>
            <if test="transactionCreateDate != null">
                transaction_create_date,
            </if>
            <if test="payedDate != null">
                payed_date,
            </if>
            <if test="lastUpdateDate != null">
                last_update_date,
            </if>
            <if test="transactionSource != null">
                transaction_source,
            </if>
            <if test="transactionType != null">
                transaction_type,
            </if>
            <if test="transactionTarget != null">
                transaction_target,
            </if>
            <if test="goodName != null">
                good_name,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="transactionDirection != null">
                transaction_direction,
            </if>
            <if test="transactionStatus != null">
                transaction_status,
            </if>
            <if test="serviceFee != null">
                service_fee,
            </if>
            <if test="successfulRefund != null">
                successful_refund,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="fundStatus != null">
                fund_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="transactionId != null">
                #{transactionId,jdbcType=VARCHAR},
            </if>
            <if test="businessId != null">
                #{businessId,jdbcType=VARCHAR},
            </if>
            <if test="transactionCreateDate != null">
                #{transactionCreateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="payedDate != null">
                #{payedDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateDate != null">
                #{lastUpdateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="transactionSource != null">
                #{transactionSource,jdbcType=VARCHAR},
            </if>
            <if test="transactionType != null">
                #{transactionType,jdbcType=VARCHAR},
            </if>
            <if test="transactionTarget != null">
                #{transactionTarget,jdbcType=VARCHAR},
            </if>
            <if test="goodName != null">
                #{goodName,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DOUBLE},
            </if>
            <if test="transactionDirection != null">
                #{transactionDirection,jdbcType=INTEGER},
            </if>
            <if test="transactionStatus != null">
                #{transactionStatus,jdbcType=VARCHAR},
            </if>
            <if test="serviceFee != null">
                #{serviceFee,jdbcType=DOUBLE},
            </if>
            <if test="successfulRefund != null">
                #{successfulRefund,jdbcType=DOUBLE},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="fundStatus != null">
                #{fundStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiaobowd.mysite.bean.AlipayTransactionRecordVO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update T_ALIPAY_TRANSACTION_RECORDS
        <set>
            <if test="businessId != null">
                business_id = #{businessId,jdbcType=VARCHAR},
            </if>
            <if test="transactionCreateDate != null">
                transaction_create_date = #{transactionCreateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="payedDate != null">
                payed_date = #{payedDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateDate != null">
                last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="transactionSource != null">
                transaction_source = #{transactionSource,jdbcType=VARCHAR},
            </if>
            <if test="transactionType != null">
                transaction_type = #{transactionType,jdbcType=VARCHAR},
            </if>
            <if test="transactionTarget != null">
                transaction_target = #{transactionTarget,jdbcType=VARCHAR},
            </if>
            <if test="goodName != null">
                good_name = #{goodName,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DOUBLE},
            </if>
            <if test="transactionDirection != null">
                transaction_direction = #{transactionDirection,jdbcType=INTEGER},
            </if>
            <if test="transactionStatus != null">
                transaction_status = #{transactionStatus,jdbcType=VARCHAR},
            </if>
            <if test="serviceFee != null">
                service_fee = #{serviceFee,jdbcType=DOUBLE},
            </if>
            <if test="successfulRefund != null">
                successful_refund = #{successfulRefund,jdbcType=DOUBLE},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="fundStatus != null">
                fund_status = #{fundStatus,jdbcType=INTEGER},
            </if>
        </set>
        where transaction_id = #{transactionId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiaobowd.mysite.bean.AlipayTransactionRecordVO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update T_ALIPAY_TRANSACTION_RECORDS
        set business_id = #{businessId,jdbcType=VARCHAR},
        transaction_create_date = #{transactionCreateDate,jdbcType=TIMESTAMP},
        payed_date = #{payedDate,jdbcType=TIMESTAMP},
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
        transaction_source = #{transactionSource,jdbcType=VARCHAR},
        transaction_type = #{transactionType,jdbcType=VARCHAR},
        transaction_target = #{transactionTarget,jdbcType=VARCHAR},
        good_name = #{goodName,jdbcType=VARCHAR},
        amount = #{amount,jdbcType=DOUBLE},
        transaction_direction = #{transactionDirection,jdbcType=INTEGER},
        transaction_status = #{transactionStatus,jdbcType=VARCHAR},
        service_fee = #{serviceFee,jdbcType=DOUBLE},
        successful_refund = #{successfulRefund,jdbcType=DOUBLE},
        remark = #{remark,jdbcType=VARCHAR},
        fund_status = #{fundStatus,jdbcType=INTEGER}
        where transaction_id = #{transactionId,jdbcType=VARCHAR}
    </update>

    <insert id="insertBatch" parameterType="java.util.List">

        <if test="list != null">
            begin
            <foreach collection="list" item="item" index="index" close="" open="" separator="">
                insert into T_ALIPAY_TRANSACTION_RECORDS (transaction_id,
                business_id,
                transaction_create_date,
                payed_date,
                last_update_date,
                transaction_source,
                transaction_type,
                transaction_target,
                good_name,
                amount,
                transaction_direction,
                transaction_status,
                service_fee,
                successful_refund,
                remark,
                fund_status)
                values (
                #{item.transactionId,jdbcType=VARCHAR},
                #{item.businessId,jdbcType=VARCHAR},
                #{item.transactionCreateDate,jdbcType=TIMESTAMP},
                #{item.payedDate,jdbcType=TIMESTAMP},
                #{item.lastUpdateDate,jdbcType=TIMESTAMP},
                #{item.transactionSource,jdbcType=VARCHAR},
                #{item.transactionType,jdbcType=VARCHAR},
                #{item.transactionTarget,jdbcType=VARCHAR},
                #{item.goodName,jdbcType=VARCHAR},
                #{item.amount,jdbcType=DOUBLE},
                #{item.transactionDirection,jdbcType=INTEGER},
                #{item.transactionStatus,jdbcType=VARCHAR},
                #{item.serviceFee,jdbcType=DOUBLE},
                #{item.successfulRefund,jdbcType=DOUBLE},
                #{item.remark,jdbcType=VARCHAR},
                #{item.fundStatus,jdbcType=INTEGER});
            </foreach>
            end;
        </if>
    </insert>
</mapper>